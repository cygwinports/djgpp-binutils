--- origsrc/binutils-2.21.1/gas/acinclude.m4	2009-09-07 04:15:30.000000000 -0500
+++ src/binutils-2.21.1/gas/acinclude.m4	2013-11-15 01:01:22.511386300 -0600
@@ -23,6 +23,7 @@ AC_DEFUN([GAS_WORKING_ASSERT],
 [AC_MSG_CHECKING([for working assert macro])
 AC_CACHE_VAL(gas_cv_assert_ok,
 AC_TRY_LINK([#include <assert.h>
+#include <string.h>
 #include <stdio.h>], [
 /* check for requoting problems */
 static int a, b, c, d;
--- origsrc/binutils-2.21.1/gas/configure	2010-11-05 05:33:36.000000000 -0500
+++ src/binutils-2.21.1/gas/configure	2013-11-15 01:12:49.186661900 -0600
@@ -13602,6 +13602,7 @@ else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 #include <assert.h>
+#include <string.h>
 #include <stdio.h>
 int
 main ()
--- origsrc/binutils-2.21.1/libiberty/aclocal.m4	2010-10-26 14:18:21.000000000 -0500
+++ src/binutils-2.21.1/libiberty/aclocal.m4	2013-11-15 01:00:06.879060400 -0600
@@ -14,6 +14,8 @@ AC_CACHE_CHECK([for working strncmp], ac
 /* Test by Jim Wilson and Kaveh Ghazi.
    Check whether strncmp reads past the end of its string parameters. */
 #include <sys/types.h>
+#include <string.h>
+#include <stdlib.h>
 
 #ifdef HAVE_FCNTL_H
 #include <fcntl.h>
@@ -146,7 +148,9 @@ if test $ac_cv_os_cray = yes; then
 fi
 
 AC_CACHE_CHECK(stack direction for C alloca, ac_cv_c_stack_direction,
-[AC_TRY_RUN([find_stack_direction ()
+[AC_TRY_RUN([
+#include <stdlib.h>
+find_stack_direction ()
 {
   static char *addr = 0;
   auto char dummy;
--- origsrc/binutils-2.21.1/libiberty/configure	2010-11-05 05:31:22.000000000 -0500
+++ src/binutils-2.21.1/libiberty/configure	2013-11-15 01:00:06.904061800 -0600
@@ -6016,6 +6016,7 @@ else
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
+#include <stdlib.h>
 find_stack_direction ()
 {
   static char *addr = 0;
@@ -6785,6 +6786,8 @@ else
 /* Test by Jim Wilson and Kaveh Ghazi.
    Check whether strncmp reads past the end of its string parameters. */
 #include <sys/types.h>
+#include <string.h>
+#include <stdlib.h>
 
 #ifdef HAVE_FCNTL_H
 #include <fcntl.h>
